# Copied output from a get_species_list.py search
species = {1075904: {'COX1': [['JN842980', 'CDS', 700], ['JN842979', 'CDS', 700], ['JN842978', 'CDS', 700], ['JN842977', 'CDS', 700], ['JN842976', 'CDS', 700], ['JN842975', 'CDS', 700], ['JN842974', 'CDS', 700], ['JN842973', 'CDS', 700], ['JN842972', 'CDS', 683], ['JN842971', 'CDS', 700], ['JN842970', 'CDS', 700], ['JN842969', 'CDS', 700], ['JN842968', 'CDS', 700], ['JN842967', 'CDS', 700], ['JN842966', 'CDS', 667], ['JN842965', 'CDS', 700], ['JN842964', 'CDS', 680], ['JN842963', 'CDS', 700], ['JN842962', 'CDS', 700], ['JN842961', 'CDS', 700]]}, 1075905: {'COX1': [['JN842994', 'CDS', 700], ['JN842993', 'CDS', 700], ['JN842992', 'CDS', 700], ['JN842991', 'CDS', 700], ['JN842990', 'CDS', 700], ['JN842989', 'CDS', 697], ['JN842988', 'CDS', 700], ['JN842987', 'CDS', 700], ['JN842986', 'CDS', 700], ['JN842985', 'CDS', 700], ['JN842984', 'CDS', 700], ['JN842983', 'CDS', 700], ['JN842982', 'CDS', 700], ['JN842981', 'CDS', 700]]}, 1075906: {'COX1': [['JN842999', 'CDS', 700], ['JN842998', 'CDS', 700], ['JN842997', 'CDS', 700], ['JN842996', 'CDS', 677], ['JN842995', 'CDS', 700]]}, 1075907: {'COX1': [['JN843005', 'CDS', 700], ['JN843004', 'CDS', 700], ['JN843003', 'CDS', 666], ['JN843002', 'CDS', 700], ['JN843001', 'CDS', 700], ['JN843000', 'CDS', 700]]}, 1075908: {'COX1': [['JN843048', 'CDS', 700], ['JN843047', 'CDS', 700], ['JN843046', 'CDS', 700], ['JN843045', 'CDS', 662], ['JN843044', 'CDS', 668], ['JN843043', 'CDS', 700], ['JN843042', 'CDS', 700], ['JN843041', 'CDS', 700], ['JN843040', 'CDS', 700], ['JN843039', 'CDS', 700], ['JN843038', 'CDS', 700], ['JN843037', 'CDS', 700], ['JN843036', 'CDS', 700], ['JN843035', 'CDS', 700], ['JN843034', 'CDS', 700], ['JN843033', 'CDS', 700], ['JN843032', 'CDS', 685], ['JN843031', 'CDS', 689], ['JN843030', 'CDS', 650], ['JN843029', 'CDS', 700]]}, 1075909: {'COX1': [['JN845050', 'CDS', 700]]}, 207422: {'COX1': [['KM846890', 'CDS', 658], ['KM844493', 'CDS', 658], ['GU681185', 'CDS', 658], ['GU681184', 'CDS', 658], ['GU681183', 'CDS', 658], ['GU681182', 'CDS', 658], ['HM416750', 'CDS', 658], ['GU680559', 'CDS', 658], ['GU680558', 'CDS', 658], ['GU680551', 'CDS', 658], ['GU680549', 'CDS', 658], ['GU680546', 'CDS', 658], ['GU680539', 'CDS', 658], ['GU680535', 'CDS', 658], ['GU680534', 'CDS', 658], ['GU680506', 'CDS', 658], ['GU680505', 'CDS', 624], ['GU680504', 'CDS', 658], ['GU680503', 'CDS', 658], ['GU680501', 'CDS', 658]]}, 398601: {'SSU': [['KJ548214', 'rRNA', 353]]}, 253321: {'ND1': [['AY368226', 'CDS', 89]]}, 207423: {'LSU': [['AY138645', 'rRNA', 509]]}, 1553294: {'COX1': [['MZ660659', 'CDS', 658], ['MZ660488', 'CDS', 658], ['MZ658204', 'CDS', 658], ['KU916271', 'CDS', 658], ['KU913032', 'CDS', 658], ['KM446031', 'CDS', 615], ['KJ966132', 'CDS', 658]]}, 1943823: {'COX1': [['KU874915', 'CDS', 658]]}, 1075903: {'COX1': [['JN842954', 'CDS', 700], ['JN842953', 'CDS', 700], ['JN842952', 'CDS', 700], ['JN842951', 'CDS', 700]]}, 107800: {'COX1': [['KU913466', 'CDS', 658], ['KU909897', 'CDS', 658], ['KU907711', 'CDS', 658]]}, 624220: {'SSU': [['FN257610', 'rRNA', 384]]}, 309088: {'LSU': [['AJ850377', 'rRNA', 509]]}, 1267234: {'COX1': [['HM385964', 'CDS', 658], ['GU681170', 'CDS', 605], ['JN290524', 'CDS', 647], ['KJ203422', 'CDS', 657], ['KU874910', 'CDS', 326], ['KC502357', 'CDS', 658], ['KC502356', 'CDS', 658], ['KC016747', 'CDS', 658], ['KC016746', 'CDS', 514], ['KC016745', 'CDS', 621], ['KC016744', 'CDS', 658], ['KC016743', 'CDS', 658], ['KC016742', 'CDS', 623]]}, 940476: {'COX1': [['FR751065', 'CDS', 628]]}, 2791662: {'COX1': [['JF890095', 'CDS', 658], ['JF890094', 'CDS', 658], ['JF890093', 'CDS', 658]]}, 469493: {'SSU': [['EF670261', 'rRNA', 599]]}, 940472: {'COX1': [['FR751064', 'CDS', 628]]}, 940473: {'SSU': [['LC466129', 'rRNA', 785]]}, 940474: {'COX1': [['AB674738', 'CDS', 769], ['AB674737', 'CDS', 769], ['FR751063', 'CDS', 628], ['FR751062', 'CDS', 628], ['FR751061', 'CDS', 628], ['FR751052', 'CDS', 628], ['FR751048', 'CDS', 628], ['FR751047', 'CDS', 628], ['FR751044', 'CDS', 628], ['FR751043', 'CDS', 628]]}, 940475: {'COX1': [['FR751050', 'CDS', 628], ['FR751049', 'CDS', 628]]}, 183356: {'COX1': [['JF887756', 'CDS', 658], ['JF887751', 'CDS', 658], ['HM411819', 'CDS', 658], ['KR491367', 'CDS', 658], ['KU874914', 'CDS', 636]]}, 183357: {'SSU': [['KJ548215', 'rRNA', 353]]}, 1075902: {'COX1': [['JN842950', 'CDS', 700], ['JN842949', 'CDS', 700], ['JN842948', 'CDS', 700], ['JN842947', 'CDS', 700], ['JN842946', 'CDS', 700], ['JN842945', 'CDS', 700], ['JN842944', 'CDS', 700], ['JN842943', 'CDS', 700], ['JN842942', 'CDS', 700], ['JN842941', 'CDS', 700], ['JN842940', 'CDS', 700], ['JN842939', 'CDS', 675], ['JN842938', 'CDS', 700], ['JN842937', 'CDS', 650], ['JN842936', 'CDS', 662], ['JN842935', 'CDS', 700], ['JN842934', 'CDS', 700], ['JN842933', 'CDS', 648], ['JN842932', 'CDS', 689], ['JN842931', 'CDS', 700]]}, 940477: {'COX1': [['KU919266', 'CDS', 658], ['KU917874', 'CDS', 658], ['KM441488', 'CDS', 658], ['KM439402', 'CDS', 658], ['FR751066', 'CDS', 628]]}}

# Trying to get longest sequence for each gene for each species.
# I know there is a max function but I couldn't get it to work.
# Struggling to get the list/dict syntax right to get the output in a sensible format.
# Ultimately will save sequences in species dict, and output as fasta. Is a dict a sensible intermediate step here?
longest = {}
for tax, stdname in species.items():
    for records, list in stdname.items():
        print("list:")
        print(list)
        for rec in list:
            maxrec = list[0]
            if rec[2]>=maxrec[2]:
                maxi = maxrec
    if tax in longest:
        longest[tax].append({stdname: maxrec})
    else:
        longest[tax] = {stdname: maxrec}

print("longest:")
print(longest)

